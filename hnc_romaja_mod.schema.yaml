# Rime schema
# vim: set sw=2 sts=2 et:
# encoding: utf-8

schema:
  schema_id: hnc_romaja_mod
  name: HNC Romaja (mod)
  version: "0.1"
  author:
    - Kevin Li <kevinli020508@gmail.com>
    - Patrick <ipatrickmac@me.com>
    - 雪齋 <lyc20041@gmail.com>
  description: |
    HNC Romaja for Rime
    (This is a slightly modified version
    where f is mapped to ㅇ for convenience)
    ㄱg ㄴn ㄷd ㄹl/r ㅁm ㅂb ㅅs ㅇx/f
    ㅈj ㅊc ㅋk ㅌt ㅍp ㅎh
    ㅏaㅐai ㅑia ㅒiai ㅓe ㅔei ㅕie ㅖiei
    ㅗo ㅘoa ㅙoai ㅚoi ㅛio
    ㅜu ㅝue ㅞuei ㅟui ㅠiu
    ㅡw ㅢwi ㅣi/y

menu:
  page_size: 0

switches:
  - name: half_shape
    states: [ 半角, 全角 ]
    reset: 0

engine:
  processors:
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
    # - fluency_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - script_translator
    - echo_translator
    - reverse_lookup_translator
  filters:
    - simplifier
    - uniquifier

speller:
  alphabet: 'zyxwvutsrqponmlkjihgfedcbaBDGSJ'
  initials: 'zyxwvutsrqponmlkjihgfedcbaBDGSJ'
  finals: 'zyxwvutsrqponmlkjihgfedcbaGS'
  delimiter: " '"
  algebra:
    # - abbrev/^([gndlmbsqjcktph]).+$/$1/
    # - derive/(^|[ '])x?([aeiouy])/$1$2/
    # - derive/([^aeiou]|^)B/$1bb/
    # - derive/'//
    - derive/x$/ng/
    - derive/x/f/
    - derive/l/r/
    # - derive/p/f/
    - derive/i/y/
    - derive/oa/wa/
    - derive/ue/we/
    - derive/ue/wo/
    - derive/i([aeou])/y$1/
    - derive/^([A-Za-z]+)\d$/$1/

translator:
  dictionary: hnc_romaja_mod
  prism: hnc_romaja_mod
  spelling_hints: 9
  preedit_format:
    - xform/ /'/
    - xform/wa/oa/
    - xform/w[eo]/ue/
    - xform/f/x/
    - xform/r/l/

    # double final consonants
    - xform/gs/ᆪ/
    - xform/nj/ᆬ/
    - xform/nh/ᆭ/
    - xform/lg/ᆰ/
    - xform/lm/ᆱ/
    - xform/lb/ᆲ/
    - xform/ls/ᆳ/
    - xform/lt/ᆴ/
    - xform/lp/ᆵ/
    - xform/lh/ᆶ/
    - xform/bs/ᆹ/

    # tense and lax consonant pairs
    - xform/G($|')/ᆩ$1/
    - xform/G/ᄁ/
    - xform/g($|')/ᆨ$1/
    - xform/g/ᄀ/

    - xform/S($|')/ᆻ$1/
    - xform/S/ᄊ/
    - xform/s($|')/ᆺ$1/
    - xform/s/ᄉ/

    # - derive/([^aeiou]|^)bb/$1B/
    - xform/B/ᄈ/
    - xform/b($|')/ᆸ$1/
    - xform/b/ᄇ/

    - xform/D/ᄄ/
    - xform/d($|')/ᆮ$1/
    - xform/d/ᄃ/

    - xform/J/ᄍ/
    - xform/j($|')/ᆽ$1/
    - xform/j/ᄌ/

    # Rest of the consonants
    - xform/l($|')/ᆯ$1/
    - xform/l/ᄅ/

    - xform/m($|')/ᆷ$1/
    - xform/m/ᄆ/

    - xform/h($|')/ᇂ$1/
    - xform/h/ᄒ/

    - xform/n($|')/ᆫ$1/
    - xform/n/ᄂ/

    - xform/c($|')/ᆾ$1/
    - xform/c/ᄎ/

    - xform/p($|')/ᇁ$1/
    - xform/p/ᄑ/

    - xform/t($|')/ᇀ$1/
    - xform/t/ᄐ/

    - xform/k($|')/ᆿ$1/
    - xform/k/ᄏ/

    - xform/iai/ᅤ/
    - xform/iei/ᅨ/
    - xform/uei/ᅰ/
    - xform/ai/ᅢ/
    - xform/ei/ᅦ/
    - xform/ia/ᅣ/
    - xform/ie/ᅧ/
    - xform/io/ᅭ/
    - xform/iu/ᅲ/
    - xform/ue/ᅯ/
    - xform/ui/ᅱ/
    - xform/wi/ᅴ/
    - xform/o/ᅩ/
    - xform/e/ᅥ/
    - xform/a/ᅡ/
    - xform/i/ᅵ/
    - xform/u/ᅮ/
    - xform/w/ᅳ/
    - xform/(^|')x/ᄋ/
    - xform/x/ᆼ/
    - xform/'/ /
  # comment_format:
  #   - xform/(^|[ '])[xf]/$1/
  #   - xform/x/ng/

reverse_lookup:
  dictionary: hnc_hanja_mod
  prefix: "`"
  tips: 〔漢字・한자〕
  comment_format:
    - xform/(^|[ '])x/$1/
    - xform/x/ng/

punctuator:
  import_preset: default
  full_shape:
    "$" : [ ￦, ￥, "$", "€", "£", "¥", "¢", "¤" ]
  half_shape:
    "$" : [ ₩, "$", "€", "£", "¥", "¢", "¤" ]
    "," : { commit: "," }
    "." : { commit: "." }
    "<" : "<"
    ">" : ">"
    "/" : "/"
    "?" : { commit: "?" }
    ";" : { commit: ";" }
    ":" : { commit: ":" }
    "'" : "'"
    "\"" : "\""
    "\\" : "\\"
    "|" : "|"
    "`" : "`"
    "~" : "~"
    "!" : { commit: "!" }
    "@" : "@"
    "#" : "#"
    "%" : "%"
    "^" : "^"
    "&" : "&"
    "*" : "*"
    "(" : "("
    ")" : ")"
    "-" : "-"
    "_" : "_"
    "+" : "+"
    "=" : "="
    "[" : "["
    "]" : "]"
    "{" : "{"
    "}" : "}"

key_binder:
  import_preset: default

recognizer:
  import_preset: default
  patterns:
    reverse_lookup: "`[a-z]*$"

# abc_segmentor:
#   extra_tags:
    #- reverse_lookup
